# Generated by Django 5.1.4 on 2024-12-24 12:12

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Workflow',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='workflowmanager_user_groups', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='workflowmanager_user_permissions', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('latest_version', models.IntegerField()),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workflowManager.user')),
                ('workflow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workflowManager.workflow')),
            ],
        ),
        migrations.CreateModel(
            name='VersionedDocument',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('creation_time', models.DateTimeField(auto_now_add=True)),
                ('version', models.IntegerField()),
                ('workflow_elements', models.JSONField()),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workflowManager.document')),
            ],
        ),
        migrations.CreateModel(
            name='WorkflowElement',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('position', models.IntegerField()),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('relevancy_checking_prompt', models.TextField()),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workflowManager.agent')),
                ('workflow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workflowManager.workflow')),
            ],
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('from_agent_type', models.CharField(choices=[('agent', 'Agent'), ('user', 'User')], max_length=5)),
                ('from_id', models.CharField(max_length=255)),
                ('in_reply_to', models.CharField(blank=True, max_length=255, null=True)),
                ('creation_time', models.DateTimeField(auto_now_add=True)),
                ('message', models.TextField()),
                ('to_agent_type', models.CharField(choices=[('agent', 'Agent'), ('user', 'User')], max_length=5)),
                ('to_id', models.CharField(max_length=255)),
                ('start_position', models.IntegerField()),
                ('end_position', models.IntegerField()),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workflowManager.document')),
                ('current_document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workflowManager.versioneddocument')),
                ('current_workflow_element', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workflowManager.workflowelement')),
            ],
        ),
    ]
